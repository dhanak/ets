{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": false,
  "attributes": {
    "acr.loa.map": "{}",
    "cibaAuthRequestedUserHint": "login_hint",
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "clientOfflineSessionIdleTimeout": "0",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "organizationsEnabled": "false",
    "parRequestUriLifespan": "60",
    "realmReusableOtpCode": "false"
  },
  "authenticationFlows": [
    {
      "alias": "Account verification options",
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Method with which to verity the existing account",
      "id": "4d26b4cf-5f01-4e0d-833a-443ded663fc8",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Browser - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "34631ba7-939f-4443-b698-025430b2a16f",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "a77b2d47-ec21-46cf-bc31-8d88b9971bd0",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "First broker login - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "c8b82573-398e-4b46-8efa-1f4a8bc458f1",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "da341178-6d85-4771-bd4f-4062b6920829",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Reset - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "id": "7b6fe99c-f25b-4676-bc82-ab0f07458cec",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "User creation or linking",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow for the existing/non-existing user alternatives",
      "id": "70a03e4d-0883-4ee1-8097-dbd0586f5af1",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "5afa8220-f0ea-4a26-b824-7fdd1260d51c",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "718f24d8-7ae3-492a-821c-4d53a003ca66",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "58bd87ea-7b05-42a5-b8b0-64be4c2718b2",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "priority": 30,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "58bb6395-69f1-4dbb-8ba6-041b40bc460c",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "8d73a0a2-0c2b-4e46-acda-afaed331c9f8",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "ba6e8005-aee4-453a-b29e-4a322b9d56e1",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "d98b5cc4-e8b1-4c6d-97ed-888b287d283f",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "63d64113-255a-4744-8122-a73e213303ea",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 70,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "44959b8f-bf50-437e-bbc6-8ac4519843e5",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "priority": 40,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "653db696-455e-4c05-95f6-7ea645fc22f8",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "cbc20370-47bd-4199-8bd4-e721096e1ad2",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "7460041d-14eb-43e8-bc48-090e66bec71f"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "8292d925-2d07-418f-8cd9-b4aac4596f3c"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "referrerPolicy": "no-referrer",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "clientPolicies": {
    "policies": []
  },
  "clientProfiles": {
    "profiles": []
  },
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "91e26a67-b963-4e47-a6b3-bcfe1b077030",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ccb3ea64-bbfd-42c6-a09f-b96d6f91daba",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "neptun_code",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "lightweight.claim": "false",
            "user.attribute": "neptunCode",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5b0123ea-c9b2-4725-9472-5c07f3ed1398",
          "name": "Neptun code",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0751c209-2943-4b34-975f-ffdc17b36717",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "99f61d05-bf9f-4cd0-aac4-e432669b062d",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c88673f0-1576-4e4c-b156-ee5253854041",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a3011dbf-cbae-4e44-8385-c46353c0cfd9",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "16b9c1ca-f9dd-45b7-9151-41e89d2b890f",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "cd1dcfb6-65c4-4250-9611-94a0143e2534",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "02656d47-3ce0-4a22-b32a-aa72d0a36fff",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4522923d-1cfd-49ce-8a86-28a7fc3556f1",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "858465f3-ffb1-4ae8-85b9-d448d54fef6e",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "long",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "22c790f1-9c5a-4075-b498-a7ebccc7aff0",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a233d616-fae1-4bff-a6c7-8ea3a438709b",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5f5fa4ba-971a-40bb-9467-a6880f205c50",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b72e26e1-12ed-44cd-b5f9-9e5e371df80f",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add all basic claims to the token",
      "id": "eb94fa36-9386-43f8-a8b4-9c0f272d656b",
      "name": "basic",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "long",
            "user.session.note": "AUTH_TIME",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "75a3a6bb-1774-49b6-8fe0-fa25f43e1e13",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7af9e20c-0bc8-4e24-b3c2-26ecd339e650",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "ced93bdf-5189-4141-8f84-8172a86282dd",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a5a69c61-24e1-4b10-bc5a-5da10c073ec3",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "664c715c-5698-4513-8297-3dbc378f7941",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "cdcc655d-d6ec-48af-9e2a-e38e07694328",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "9d9fe04a-9ff1-4a6f-8bac-3a8c7e58d80e",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          },
          "consentRequired": false,
          "id": "6ccc92df-7cba-4e4f-8650-eaf42e6deddc",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "0a4fe932-9f23-4f80-aab4-ecb2d7b947ce",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "id": "5853371b-e1a0-440e-bdaa-90ac5c1dd9aa",
      "name": "acr",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7c5fd368-d3c9-43a9-b82d-21935cc14c8f",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "22c2d954-e183-4392-adc1-b49dcb7beb11",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "06965b3b-9ad1-463e-85f8-739fc98291b5",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "c175b1eb-13da-477d-a18c-6e6ed5a6d4fa",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "47dedc09-3105-4713-9a0f-3e731a790871",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "923ad269-5f35-4248-8ffd-161708477cb6",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "4fb413c5-92b4-4a50-a75d-d0b51eacbe0f",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "c0ada7ea-5164-4c33-afd3-98bc7ea38954",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          },
          "consentRequired": false,
          "id": "fb632c79-5b10-4a40-a28c-7fe7eb588431",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "c754e862-ebbc-4a07-a8f0-a74de7cac4db",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "776c5192-e903-4975-a097-07f3d5209ab6",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a3093631-1a92-4e31-9a0a-19d15b1299e5",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "136b5068-b22d-4b5b-9ea1-0215b128b523",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "2351f38c-362c-4738-97b3-399275d60508",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    }
  ],
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clients": [
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/ets/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "960eeb98-4d27-4f69-be26-7e34b9923b11",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "/realms/ets/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/ets/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "15eccffc-7e08-41cb-a3cb-2fd529c01f6b",
      "implicitFlowEnabled": false,
      "name": "${client_account-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "7d5128a7-5368-4eaa-8839-506ee81b044b",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/realms/ets/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "46a71a2e-2c9b-44e1-944d-3210669635da",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "b2a4299b-6817-4960-ba10-56e11da709c1",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.secret.creation.time": "1722951604",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "ets",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "description": "",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": true,
      "id": "2b02fa91-a9b8-4370-9641-7df43900848f",
      "implicitFlowEnabled": false,
      "name": "ets",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "*"
      ],
      "rootUrl": "",
      "secret": "Ecee2LKQfSUsg8WQUZGwn5saCHKH4mro",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "*"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/admin/ets/console/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "ff631c95-5a10-4659-bd89-fcebde2978f3",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7079136b-b780-40dd-936c-6ccd95099718",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/admin/ets/console/*"
      ],
      "rootUrl": "${authAdminUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "config": {
          "algorithm": [
            "HS512"
          ],
          "kid": [
            "c0fad3ba-68d0-4d34-8c6f-22b6480da6be"
          ],
          "priority": [
            "100"
          ],
          "secret": [
            "3lXgOBeH-aHLkfHLDNlczMDw7HRbLFBBcvbmdlIB6dF1q_q5fWE9zvmg8Yu-Lutkb7b4BQg9lIOhZKMrp-0Y-_AaS83PXtP7nAqkvpRTn1WJ-DI98A5hiwEc_sxfi7PuqYQtjZ8q3Y4SUI6iHf4SC4_YSYtrICLJe2PtBGZUegM"
          ]
        },
        "id": "58e4ea9c-b168-4705-8870-ec746b5841cf",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {}
      },
      {
        "config": {
          "certificate": [
            "MIIClTCCAX0CBgGRT+q7dTANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANldHMwHhcNMjQwODE0MDgwMjQ5WhcNMzQwODE0MDgwNDI5WjAOMQwwCgYDVQQDDANldHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC95YQe/tOKmBh/Nv4567E3UyoRfTL7TbU0M54JGuLCvsBJPeZkhnVPqR5RkzxeWYZ8F5jVV239xfmdNXvLfFKicL10nxOGmyVKQQPWARnuQTD3J6U3MMHan81YisZVThG5/vr/6z/eW0TBXqjoj+ipvR3e67bTA1fT0qVnJdJlN2FWaLNAOeHuPzDSaP3ytiA1xOMicJCXK6QtT5LjYiDFIr6Cdf/+yMdw9mnO9tML7PXbm1I+tLHkDyQF7zfVfBxoBJNJd6ihPcAx5ddrj2z9LiSSUP+pxPee300OmNU9CKUWSeQ8axNnVhRFHhC3/pcadRJiSRItrWSiS4BkPNQ3AgMBAAEwDQYJKoZIhvcNAQELBQADggEBABEQEM26vwjliZPxXITYOxBwgeadfyCrDcP7MuLjBt98ptS/7Ii0GComLOrIDx/+C7b5pyeeacH6iQ+79zjqBqCY4kJkE3yv8vUo4lngXgC9Mvu5l4r4nqlg8oHJkDb2QTyBh+OTqu5niiKvhzhCwCdWaH4sRGIb/ttKKOKd9S8iOPCeotbPogErVglXajKehwpKKrkqzEkWv7rGBAeJXvCA1tCuEmKvHZcdD+Km/hsxO0vm65WOJ602mBt9y8y8bmGx1vod8VwDiBMpCazAjh3rNpMpEwu2Sh8UYCc5Pi/asi5u49byV1SoQp6HObZxXUIz9hS6ZUT2sSBBkJqVPno="
          ],
          "priority": [
            "100"
          ],
          "privateKey": [
            "MIIEpAIBAAKCAQEAveWEHv7TipgYfzb+OeuxN1MqEX0y+021NDOeCRriwr7AST3mZIZ1T6keUZM8XlmGfBeY1Vdt/cX5nTV7y3xSonC9dJ8ThpslSkED1gEZ7kEw9yelNzDB2p/NWIrGVU4Ruf76/+s/3ltEwV6o6I/oqb0d3uu20wNX09KlZyXSZTdhVmizQDnh7j8w0mj98rYgNcTjInCQlyukLU+S42IgxSK+gnX//sjHcPZpzvbTC+z125tSPrSx5A8kBe831XwcaASTSXeooT3AMeXXa49s/S4kklD/qcT3nt9NDpjVPQilFknkPGsTZ1YURR4Qt/6XGnUSYkkSLa1kokuAZDzUNwIDAQABAoIBAB4+PvgGwp8YkRI1qnCEEoHKq3EEnQl7+0d4jwtJLmMwqQQhKR/KcEWDHDKGvf8SyAHcajlUBs77aEE64t/qCWkYhnvb1+rAq8QzLY64Ny6EUG2UcVIkYENW3wfidirg157lNolqqI3bwEwBrOn4/WeHGIpHxSK/Lg4sxq3yTptS2+EdHeX2bBYMJCAgIqogrMtIkhVoh3mocIwwLY3OXh4yO3ER6ivJMBp7LuGyh17rPsf3i3dCxltIGLtYZfPId30n4Ttonl1IhMOvpByVNKIJS0wspKIIN+QrPOh3caQBbKAg4STaCZlZBEiZyrzowuWic9zQ8BBEvX2trYGhPf0CgYEA3V458UZrEQhhDyXkF5+VxmfAKesYXP3LVyNaWAtfFL2c9AKeKQYyeNu3wECzWUrdE+D8OWfgOrriMpQU3IkU+TqX3yNjNBK5seJ4dM85xhRsclU+au1iEb9V9C3VW5hqfCp9yyDCr8N1f1IHu4V2oPzbKbhjoeP5bqsxeoRN+aUCgYEA25rbkwRb3okgMMzs01WbhuxQAyDvuDlXzz/TadzCgZXhdQP8Ti3phHCkvzEAhxLVADpPWWxjrOkGx2UL9IBm6PWwu2CLJZHwsmP4jllX/TBm0NMOaohxIB19CGNGbAHeH3bzZVUFl8NBtI/Zb7TBxrIBU6fm9lW52mlFPCIQV6sCgYADRCuosrhLtQrxlUaLTrCAD/HW7IAchyYj8AKaP/i0LqQNOaipxEykWeGZNZsv2xnt/Cjck/rMAwvpYSP5qRAlKUcqZLRHBWu2AzhxyMj6cjyzZyyXmU8UIfWbt71pL5OKp3nZsG8O9txZ95TjoHGCqJh3QiA+OEXq6x28yAz6fQKBgQCNj2eXf6nQ68gKbS8ElByrfs2dFrAwqxZFjLk1do8ThZBOJAGSS9pJ+2rXrDjQ2XzgprXbyRj/rz8lbaelNtgft7DzOKq5zze/Zt4ktMcZeQft+P9EASwbLacZrxUILrQGyGDho0r1p3JFeK0LaxO2h6x/Rq6FgIFLn6x3tOWf/QKBgQDHq34C6mValVdVE80FVEQq2xWIFdz4ACtspnXooZpYoBukFOtSVIN8nOIS+xRUNkqYvgJfHwijh7BViGzpayjmgAz3enaBNMQz/oaAafSGo6FFKLqRLYCY9LqHEMcewkFJ+FQkFJDHC8uVQ2lahdbTaiA77XTZHVHFoHrPmm0nhQ=="
          ]
        },
        "id": "a79d6a08-87d8-41f6-878b-90b78ed59153",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {}
      },
      {
        "config": {
          "kid": [
            "17704fd7-4228-417a-8a4c-b325430e06a6"
          ],
          "priority": [
            "100"
          ],
          "secret": [
            "ligP7MX0pkRiYix2Z56rig"
          ]
        },
        "id": "d0177aa6-ecca-4cfe-90eb-081fc18bccd5",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "RSA-OAEP"
          ],
          "certificate": [
            "MIIClTCCAX0CBgGRT+q8DzANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANldHMwHhcNMjQwODE0MDgwMjQ5WhcNMzQwODE0MDgwNDI5WjAOMQwwCgYDVQQDDANldHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCwmjf+1E6Yh/KD7i6L4yc4V9UKza+yFA+v/dga6FN6v+jUX3nk2uq9ACgg3fcH1yBjGfV+3EIl4Wsg6H1FFJwF3pQA0pkXZBGplwTKbqw4UYHayGkhG5/NGnW6VYxT0PS09LS5dSNcTQqkKSU7MCsMltiRVZSDkaqu7QYpTIdNk1geJC5ZuC4vleSedq1BE51dQi1PAyusaWmtWUo2BDH7nf80RXLzmZ/+EgdmBGEk0wXfdDpYqlgGO5r2G/YZaEn77v7GwksikdDcLvSqAVH1u3NPbpYkIWZFG3jEnnJHEZueMln75+ZreO4550TmJXLQUmV2ixAu9PF/2LGtpSMLAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAC2u1fRgK5W7Zn2WNIK+AP9HL8/J/CAFndfNg0xVBFVOYS3vYmUClohyam7FUBcQj1/QfWFsWuWjJzsZ1PVzEFAhwVDY3fLBYd1N0zBrHDIUWXcJ/MbGdYpaS6oZl/O9UenDfkLyelZGLdi1vBxqFJqyUlijU2s1+z94W1x87N3zyOlHQFirId4OBptFrxCzgA5jUcXr1tEPrCHIzApxzFrk2d44Gc9pzqzI5m1Bl2UpuKWy5pv+Im0EoqgB1u6nMFIfBb4t5H13uQURyLC3KJzIg9HIkekO/KZqGN0NTbcfElqCQ190DwK/S2cwM3/xW7Wxd1HUMoaYQqQXL5jKoCE="
          ],
          "priority": [
            "100"
          ],
          "privateKey": [
            "MIIEogIBAAKCAQEAsJo3/tROmIfyg+4ui+MnOFfVCs2vshQPr/3YGuhTer/o1F955NrqvQAoIN33B9cgYxn1ftxCJeFrIOh9RRScBd6UANKZF2QRqZcEym6sOFGB2shpIRufzRp1ulWMU9D0tPS0uXUjXE0KpCklOzArDJbYkVWUg5Gqru0GKUyHTZNYHiQuWbguL5XknnatQROdXUItTwMrrGlprVlKNgQx+53/NEVy85mf/hIHZgRhJNMF33Q6WKpYBjua9hv2GWhJ++7+xsJLIpHQ3C70qgFR9btzT26WJCFmRRt4xJ5yRxGbnjJZ++fma3juOedE5iVy0FJldosQLvTxf9ixraUjCwIDAQABAoIBABKiQxRFTIG1nnYjNJAYCLReOCFqsIYmrb0RGLNGHkDObP+zj0YBf1Ev6gwFv6H5Jfau74NSNDyQ+1++iDE4ynmoEY/AqNyZ928geyXs5YkPuJbgHI+cvZDDoPZnPmY9nwRU6ZjD7lY33s6RdNc47uHmLLWxBPmY7hyE7+h9pa0emOZRSEk+pfYk8G0Qi9RSILYoPw1UEbp0aufaLqwJBiJOo47Tcu1NrDhj/gB3BOAGFIXbIAZCCE3m2X/waiV2Kuz4Ne/IY8CSfVkuLuEnYoB5ieuiw36GdwaISd8lpexFKTxigRPLrKaUnWyGb2R7VnUiSugPu8WXlX7Ma6ZWfgkCgYEA5XygBt9MjMNmhtttT0z9z+hoyqe4Xp+bnb6PwGwCzMbKRD1QbPpm/9XgfdOyjbDiF+BJTzNuoXQUa3R3XJl5ON0pKmcYXxMifECSV6sKabSZ87TS4cNaYwPykTDCrKSuy634ZL3ux7/9SRvOtPYGnKjY2SWEZbhbRpmwL5L1eZUCgYEAxQF3xFEIjggCjL3H2AQ6V0/d5Oi0KRoNT64usneSLZaukPc3TM2//UMshmhpP2eKb3YhCdJXWNYUsn6SyhNp7NWmvEX1iUCzaj2FlYFXsVuGeh5NslTIu3iRjESKUsLjJS1ugrmh4cLL3ogqjrgnnN2EInXgDyX0lnyA5c+HQh8CgYB6UbcqcpNm5DAd6Y+WGT+gNgzFGCjZptFXf183/Vpws/TT8qqPq9iCvQlviAtAIuwgNdhdctihDjJkJCwLG3LVsGxkwZbn9lcHS5O1TuG5/h2hHNzaoTnoVQ5R/V+GjjDtN8mSSPqhVeA3u66uHgTgM8+BztGHNoDQXNLgSMC3EQKBgCNGkwKFHAoKpyI6bUlh4Gx38ZyminP9pTqKTvRH8tXU8GcmzTEkemdIGvXqRkZDLQeuWFYg4uEWXFhlz7T9au8shpGZ2VB9VGMGpx/RLDmm0NqXCISRJ+xht3YtY7NUEEY871fbE4CQV9799NjfYsB07c8Z2kf8HOLBYndEBM0zAoGAMIYmEA1THSQo4gbzOo2b4fDLxq1HRRd1NLbuW1b/4qHJ0gq4kpVQGbH1ZcAowWR9lKq9dCdj75WPiHjGUQY5SWa89/U80b2CdgUqAh/9oVIhr0beh0CLwnv45cZw+IPtgDS84E8HGdADJjvEl+Bkf6zjkJ7DKk3qLPu6hCNevmk="
          ]
        },
        "id": "3a9b229a-71b2-4e16-9fe5-9f28eb77430b",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {}
      }
    ],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper"
          ]
        },
        "id": "a86b3581-0d17-4649-9fa9-d06ba9bf369c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "4108538b-5ab4-49b8-b1e0-6d757d1edceb",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {},
        "id": "41e348d4-9ce1-49f6-bb8d-20354f0b0237",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper"
          ]
        },
        "id": "c1afbe16-672f-4bac-b173-707a39388a33",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "c8bce0e2-1766-4e99-b656-6810973acc57",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "28d11c1f-b624-45a4-87b4-e5bf5991b428",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "5f2d22ca-8cc4-4f9a-b2a9-498617c945c4",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "167cf585-bd2b-4d44-9271-5cb5314ee0cd",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"neptunCode\",\"displayName\":\"Neptun Code\",\"validations\":{\"length\":{\"min\":\"6\",\"max\":\"6\"},\"pattern\":{\"pattern\":\"[A-Z0-9]{6}\",\"error-message\":\"\"}},\"annotations\":{},\"required\":{\"roles\":[\"admin\",\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        },
        "id": "6d42bf8d-4d8f-4c2c-a7c6-8178acdcfd7d",
        "providerId": "declarative-user-profile",
        "subComponents": {}
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "defaultRole": {
    "clientRole": false,
    "composite": true,
    "containerId": "3473a9e3-a5a1-4bf9-af8a-9b61e2c52b16",
    "description": "${role_default-roles}",
    "id": "dc0dcd95-1628-4d16-a2e4-f99bd526a990",
    "name": "default-roles-ets"
  },
  "defaultSignatureAlgorithm": "RS256",
  "directGrantFlow": "direct grant",
  "displayName": "ETS",
  "displayNameHtml": "",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": false,
  "enabled": true,
  "enabledEventTypes": [],
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 30,
  "firstBrokerLoginFlow": "first broker login",
  "groups": [],
  "id": "3473a9e3-a5a1-4bf9-af8a-9b61e2c52b16",
  "identityProviderMappers": [],
  "identityProviders": [],
  "internationalizationEnabled": false,
  "keycloakVersion": "25.0.2",
  "localizationTexts": {},
  "loginWithEmailAllowed": false,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "maxTemporaryLockouts": 0,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "organizationsEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyCodeReusable": false,
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "ets",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": true,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "TERMS_AND_CONDITIONS"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "delete_account",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Delete Account",
      "priority": 60,
      "providerId": "delete_account"
    },
    {
      "alias": "webauthn-register",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register",
      "priority": 70,
      "providerId": "webauthn-register"
    },
    {
      "alias": "webauthn-register-passwordless",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register Passwordless",
      "priority": 80,
      "providerId": "webauthn-register-passwordless"
    },
    {
      "alias": "VERIFY_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Profile",
      "priority": 90,
      "providerId": "VERIFY_PROFILE"
    },
    {
      "alias": "delete_credential",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Delete Credential",
      "priority": 100,
      "providerId": "delete_credential"
    },
    {
      "alias": "update_user_locale",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update User Locale",
      "priority": 1000,
      "providerId": "update_user_locale"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": false,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "960eeb98-4d27-4f69-be26-7e34b9923b11",
          "description": "${role_view-applications}",
          "id": "84014fa6-bfb5-4fbd-be1f-69cc18c6b083",
          "name": "view-applications"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "960eeb98-4d27-4f69-be26-7e34b9923b11",
          "description": "${role_manage-account-links}",
          "id": "1bf82121-5311-4a6f-9668-ecc72675b972",
          "name": "manage-account-links"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "containerId": "960eeb98-4d27-4f69-be26-7e34b9923b11",
          "description": "${role_manage-consent}",
          "id": "f517b62c-b57b-441e-89e1-8ddeff19bf45",
          "name": "manage-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "960eeb98-4d27-4f69-be26-7e34b9923b11",
          "description": "${role_view-consent}",
          "id": "8bb86f02-0619-436a-b512-e7aa1f9fa322",
          "name": "view-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "960eeb98-4d27-4f69-be26-7e34b9923b11",
          "description": "${role_view-profile}",
          "id": "d049117b-206a-4422-b2a0-f1e4aaab02a1",
          "name": "view-profile"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "960eeb98-4d27-4f69-be26-7e34b9923b11",
          "description": "${role_view-groups}",
          "id": "c96a11a9-5ab9-4b21-8ca0-eb0c9f3852d1",
          "name": "view-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "960eeb98-4d27-4f69-be26-7e34b9923b11",
          "description": "${role_delete-account}",
          "id": "b7a9b922-02f4-4f73-bd7e-9d86176e8566",
          "name": "delete-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "960eeb98-4d27-4f69-be26-7e34b9923b11",
          "description": "${role_manage-account}",
          "id": "6272628e-eca8-4859-a68e-9dae655c0fef",
          "name": "manage-account"
        }
      ],
      "account-console": [],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b2a4299b-6817-4960-ba10-56e11da709c1",
          "description": "${role_read-token}",
          "id": "51abe943-7901-4aa8-8fdf-30cd132a79f3",
          "name": "read-token"
        }
      ],
      "ets": [],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_manage-realm}",
          "id": "4805038a-5feb-4753-a82d-2d6527922a11",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_query-groups}",
          "id": "b59d824d-491c-45c6-9946-c8154d1524cb",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_query-users}",
          "id": "b9417337-f795-49d3-8e25-b4adf96a77b2",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_query-realms}",
          "id": "f5e1df5b-b74d-46c8-937f-479f4b0a1f54",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_manage-users}",
          "id": "10717da2-d540-4494-aa32-44fb357abbe9",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_query-clients}",
          "id": "1d8fd0cc-773d-4d06-9b96-9cb3762b0b57",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_view-events}",
          "id": "f1a7ffdb-558b-4516-b2ce-6a2321b5b341",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_view-authorization}",
          "id": "2c7d4d7d-445d-48c3-b67a-481e397ec120",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_view-clients}",
          "id": "1a155707-aae8-4caa-9d58-c02d22498988",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_manage-authorization}",
          "id": "50a647f8-306c-4000-8fb2-37a1113ba6dd",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_manage-identity-providers}",
          "id": "deef4bcb-3c49-44c1-ab8f-31794885901a",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_create-client}",
          "id": "1496cd64-a53c-4cd6-b2c7-e859f0fd433e",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_view-realm}",
          "id": "b854b833-1637-4df1-90c4-4bcb254bbdf7",
          "name": "view-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-realm",
                "query-groups",
                "query-users",
                "query-realms",
                "manage-users",
                "query-clients",
                "view-events",
                "view-clients",
                "view-authorization",
                "manage-authorization",
                "manage-identity-providers",
                "create-client",
                "view-realm",
                "view-users",
                "impersonation",
                "manage-clients",
                "view-identity-providers",
                "manage-events"
              ]
            }
          },
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_realm-admin}",
          "id": "117b93e9-62eb-411f-ab75-59c97e3ed707",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_view-users}",
          "id": "a88d2a41-6cd0-4347-80c9-f4d6e5ffa687",
          "name": "view-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_impersonation}",
          "id": "a749470d-2ee1-4045-911a-53d03359928d",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_manage-clients}",
          "id": "6f25dc18-454d-4aa5-986f-24f08481a3f1",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_view-identity-providers}",
          "id": "b2d267e1-7dd8-430a-85db-a808f29a8013",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "7d86f8c6-70f6-4e66-ad9c-76043577fe07",
          "description": "${role_manage-events}",
          "id": "82e11b4d-061a-4fe9-9df2-e9a28ed71392",
          "name": "manage-events"
        }
      ],
      "security-admin-console": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": true,
        "composites": {
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          },
          "realm": [
            "offline_access",
            "uma_authorization"
          ]
        },
        "containerId": "3473a9e3-a5a1-4bf9-af8a-9b61e2c52b16",
        "description": "${role_default-roles}",
        "id": "dc0dcd95-1628-4d16-a2e4-f99bd526a990",
        "name": "default-roles-ets"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "3473a9e3-a5a1-4bf9-af8a-9b61e2c52b16",
        "description": "${role_offline-access}",
        "id": "b1b64c84-d051-4a6c-adb1-d1c7c71a3900",
        "name": "offline_access"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "3473a9e3-a5a1-4bf9-af8a-9b61e2c52b16",
        "description": "${role_uma_authorization}",
        "id": "ac1d4736-cf9a-4806-847a-574cac3dc684",
        "name": "uma_authorization"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {},
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "users": [
    {
      "attributes": {
        "neptunCode": [
          "ADMIN1"
        ]
      },
      "createdTimestamp": 1723622706072,
      "credentials": [
        {
          "createdDate": 1723623292792,
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}",
          "id": "be53008d-55fc-4189-8255-277238ca8199",
          "secretData": "{\"value\":\"9/lTV7Hv408/95I8Ymtmss0F21h4wS3Da2e1biB25qg=\",\"salt\":\"HHMTj3xeWJvxqiMV0YURhg==\",\"additionalParameters\":{}}",
          "type": "password",
          "userLabel": "My password"
        }
      ],
      "disableableCredentialTypes": [],
      "email": "admin@example.org",
      "emailVerified": true,
      "enabled": true,
      "firstName": "Admin",
      "groups": [],
      "id": "d577d71f-d367-4044-b922-9cfcf532845e",
      "lastName": "DP",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-ets"
      ],
      "requiredActions": [],
      "totp": false,
      "username": "admin"
    },
    {
      "attributes": {
        "neptunCode": [
          "JAKAB1"
        ]
      },
      "createdTimestamp": 1723622735595,
      "credentials": [
        {
          "createdDate": 1723623308093,
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}",
          "id": "c825b730-5b1b-4ed3-a1fd-cabc09b0394b",
          "secretData": "{\"value\":\"FOTLUkof5wXVLJTHGTvpl2r+cm7ewNiWcqrW0Ni0VLY=\",\"salt\":\"rfrs/kKPORKbfqj48m9knA==\",\"additionalParameters\":{}}",
          "type": "password",
          "userLabel": "My password"
        }
      ],
      "disableableCredentialTypes": [],
      "email": "jakab@example.org",
      "emailVerified": true,
      "enabled": true,
      "firstName": "Jakab",
      "groups": [],
      "id": "10fb56e2-81fa-45e7-b23f-33d1e4ae41db",
      "lastName": "Gipsz",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-ets"
      ],
      "requiredActions": [],
      "totp": false,
      "username": "jakab"
    }
  ],
  "verifyEmail": false,
  "waitIncrementSeconds": 60,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicyRpId": "",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyUserVerificationRequirement": "not specified"
}
