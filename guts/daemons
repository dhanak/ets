#!/bin/bash
set -euo pipefail

usage="
Usage: $(basename "$0") <command> [args...]

Where <command> is one of
  help  - present this help page
  check - check for running daemons and restart those not running
  list  - list all guarded daemons (that should be running)
  run   - run a protected daemon
  kill  - kill a protected daemon
"

header="# daemon runner process file"
ps="/bin/ps -oargs= -p"
infdir="${GUTS_WORK_DIR-${HOME}}/daemons"
mkdir -p "$infdir"

# main functions

inffile() {
    [[ -f ${inffile} ]] || return 1
    read -r head <"$1"
    if [[ "${head}" != "${header}" ]]; then
        echo "Deleting corrupted file $1" >&2
        rm "$1"
        return 1
    fi
    return 0
}

list() {
    for inffile in "${infdir}"/*.inf; do
        inffile "${inffile}" || continue
        source "${inffile}"     # sets pid, psline, wd & command
        printf "%q " "${command[@]}"; echo
    done
}

check() {
    for inffile in "$infdir"/*.inf; do
        inffile "${inffile}" || continue
        source "${inffile}"     # sets pid, psline, wd & command
        local psout
        psout=$($ps "$pid" || true)
        if [[ "${psline}" != "${psout}" ]]; then
            echo "Restarting ${command[*]}..." >&2
            rm "${inffile}"
            (cd "$wd" && start "${command[@]}") &
        fi
    done
}

start() {
    local basename="${infdir}/${uuid}"
    (echo -n "+ "; printf "%q " "$@"; echo) >"${basename}.log"
    "$@" </dev/null >>"${basename}.log" 2>&1 &
    local pid=$!
    echo Command started, output redirected to "${basename}.log" >&2
    local psline
    psline=$($ps $pid || true)
    if [[ -n $psline ]]; then
        local wd="${PWD}"
        local command=("$@")
        (echo "${header}"; declare -p command pid psline wd) >"${basename}.inf"
        wait $pid
        rm "${basename}.inf"
    else
        echo "Process line not found, command terminated already?" >&2
    fi
}

stop() {
    for inffile in "$infdir"/*.inf; do
        inffile "${inffile}" || continue
        source "${inffile}"     # sets pid, psline, wd & command
        if [[ "${command[*]}" == "$*" ]]; then
            echo "Stopping command '$*'" >&2
            rm "${inffile}"
            kill "$pid"
            return 0
        fi
    done
    echo "Daemon running command \"$*\" not found!" >&2
}

cmd="${1-help}"; shift || true
uuid="$(uuidgen)"
case $cmd in
    (help)      echo "$usage" ;;
    (list)      list "$@" ;;
    (check)     check "$@" ;;
    (start|run) start "$@" & ;;
    (stop|kill) stop "$@" ;;
    (*)         echo "$(basename "$0"): unknown command: $cmd"; exit 1 ;;
esac
