#!/bin/bash
set -euo pipefail

USAGE="
Usage: $(basename "$0") <command> [args...]

Where <command> is one of
  help   - present this help page
  status - list all guarded daemons (that should be running)
  check  - check for running daemons and restart those not running
  run    - run a protected daemon
  kill   - kill a protected daemon
"

HEADER="# daemon runner process file"
PS="/bin/ps -oargs= -p"
INFDIR="${GUTS_WORK_DIR-${HOME}}/daemons"
hash mawk 2>/dev/null && AWK="mawk -W interactive" || AWK="gawk"

# main functions

inffile() {
    local head
    [[ -f "$1" ]] || return 1
    read -r head <"$1"
    if [[ "${head}" != "${HEADER}" ]]; then
        echo "Deleting corrupted file $1" >&2
        rm "$1"
        return 1
    fi
    return 0
}

status() {
    local command inffile pid psline psout wd
    printf '\e[4;32m❤    UUID (file name base)                   command\e[0m\n'
    for inffile in "${INFDIR}"/*.inf; do
        inffile "${inffile}" || continue
        source "${inffile}"     # sets pid, psline, wd & command
        psout=$($PS "$pid" || true)
        if [[ "${psline}" == "${psout}" ]]; then
            printf '\e[1;32m✔\e[0m'
        else
            printf '\e[1;31m✘\e[0m'
        fi
        printf '    \e[35m%s\e[0m   ' "$(basename "${inffile}" .inf)"
        printf " %q" "${command[@]}"
        echo
    done
}

check() {
    local command inffile pid psline psout wd
    for inffile in "${INFDIR}"/*.inf; do
        inffile "${inffile}" || continue
        source "${inffile}"     # sets pid, psline, wd & command
        psout=$($PS "$pid" || true)
        if [[ "${psline}" != "${psout}" ]]; then
            echo "Restarting ${command[*]}..." >&2
            rm "${inffile}"
            (cd "$wd" && start "${command[@]}")
        fi
    done
}

start() {
    local base
    base="${INFDIR}/$(uuidgen)"
    start_ "${base}.inf" "$@" | \
        $AWK '{ print strftime("[%F %T %Z]"), $0; }' >"${base}.log" &
    echo "Command started, output redirected to ${base}.log" >&2
}

start_() {
    local command inffile pid psline wd
    inffile="$1"; shift
    # print command in bash -x form
    printf '+'; printf ' %q' "$@"; printf '\n'
    # run main command in background
    "$@" </dev/null 2>&1 &
    pid=$!
    psline=$($PS "$pid" || true)
    if [[ -n "${psline}" ]]; then
        wd="${PWD}"
        command=("$@")
        (echo "${HEADER}"; declare -p command pid psline wd) >"${inffile}"
        wait $pid
        rm "${inffile}"
    else
        echo "Process line not found, command terminated already?" >&2
    fi
}

stop() {
    local command inffile pid psline wd
    for inffile in "${INFDIR}"/*.inf; do
        inffile "${inffile}" || continue
        source "${inffile}"     # sets pid, psline, wd & command
        if [[ "${command[*]}" == "$*" ]]; then
            echo "Stopping command '$*'" >&2
            rm "${inffile}"
            kill "$pid" || true
            return 0
        fi
    done
    echo "Daemon running command \"$*\" not found!" >&2
}

mkdir -p "${INFDIR}"
cmd="${1-help}"; shift || true
case "${cmd}" in
    (help)        echo "$USAGE" ;;
    (list|status) status "$@" ;;
    (check)       check "$@" ;;
    (start|run)   start "$@" ;;
    (stop|kill)   stop "$@" ;;
    (*)           echo "$(basename "$0"): unknown command: $cmd"; exit 1 ;;
esac
