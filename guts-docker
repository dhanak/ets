#!/bin/bash
#
# Usage:
#
# ./guts-docker shell - to run a shell in the container
# ./guts-docker daemons ... - to run a daemons command in the container
# ./guts-docker <cmd> <args> - to directly run a guts command in the container
#
set -euo pipefail

# check for running container
if [[ -z $(docker compose ps -q guts) ]]; then
    echo 'Make sure the guts container is up by running the following command:'
    echo '$ docker compose up -d guts'
    exit 1
fi

cmd="${1-help}"; shift || true
case $cmd in
    (help)
        cut -c13- <<'        EOF'
            Usage: $0 <command> <args>...

            Available commands:

              help
                       print this help screen
              bash|sh|shell
                       run a shell in the guts container
              daemons  <sub-command>
                       run a daemons command in the guts container
        EOF
        # take the rest of the help from guts
        exec docker compose exec guts ./guts help | tail +4
        ;;
    (bash|sh|shell)
        # invoke shell or guts command directly
        exec docker compose exec guts /bin/bash "$@"
        ;;
    (daemons)
        # invoke daemons utility
        exec docker compose exec guts ./daemons "$@"
        ;;
    (testd)
        # run testd command protected by daemons script
        exec docker compose exec guts ./daemons run ./guts testd "$@"
        ;;
    (*)
        # run all other commands with guts, without allocating a terminal
        # (allows forwarding of stdin)
        exec docker compose exec -T guts ./guts "$cmd" "$@"
        ;;
esac
