#!/bin/bash
#
# Usage:
#
# ./guts-docker shell - to run a shell in the container
# ./guts-docker daemons ... - to run a daemons command in the container
# ./guts-docker <cmd> <args> - to directly run a guts command in the container
#
set -euo pipefail

# check for running container
if [[ -z $(docker compose ps -q guts) ]]; then
    echo 'Make sure the guts container is up by running the following command:'
    echo '$ docker compose up -d guts'
    exit 1
fi

if [[ $# -eq 0 || ${1-} == help ]]; then
    cat <<EOF
Usage: $0 <command> <args>...

Available commands:

  help
           print this help screen
  shell
           run a shell in the guts container
  daemons  <sub-command>
           run a daemons command in the guts container
EOF
    # take the rest of the help from guts
    exec docker compose exec -T guts ./guts help | tail +4
elif [[ $* == shell ]]; then
    # invoke shell or guts command directly
    exec docker compose exec guts /bin/bash
elif [[ ${1-} == daemons ]]; then
    shift                       # drop "daemons"
    exec docker compose exec -T guts ./daemons "$@"
elif [[ ${1-} == testd ]]; then
    # run testd command protected by daemons script
    exec docker compose exec -T guts ./daemons run ./guts "$@"
else
    exec docker compose exec -T guts ./guts "$@"
fi
