<%doc> This is a -*- mason -*- template.
Handler of the Prolog Unification (PUNI) scheme.
</%doc>
<%method longname>Prolog egyesítés</%method>

<%args> $exdata </%args>

Milyen változó-behelyettesítéseket eredményez az alábbi egyesítés?
<P>
<!--
A behelyettesítéseket <code>VáltozóNév = Érték</code> alakban, egymástól
vesszővel elválasztva kell megadni.
<P>
-->
<PRE>| ?- <% $exdata->{QUERY} %>.</PRE>

<%method helpref>
<%args>
$category
</%args>
<%init>;
return "hints?topic=PUNI";
</%init>
</%method>

<%method answers>
<%args>
$exdata
</%args>
<TABLE>
% foreach (@{ $exdata->{VARS} }) {
<TR><TD><CODE><% $_ %> =</CODE>
<TD><INPUT TYPE=text NAME="<% $_ %>" SIZE=40 VALUE="<% $ARGS{$_} %>">
% }
</TABLE>
</%method>

<%method check>
<%args>
$exdata
</%args>

<%init>
my (@answers, $ret, $msg);

@answers = @{ $exdata->{VARS} };
foreach (@answers) {
    $_ .= "=$ARGS{$_}";
}

($ret, $msg) = $m->comp('/sub/prolog_script', script => "puni_check",
			args => [(join ",", @answers), $exdata->{QUERY}]);

return ($ret == 1) ? undef : $msg;
</%init>
</%method>

<%method errstr>
<%args>
$exdata
$error
</%args>
<% $error %>
</%method>

<%method describe>
<%args>
$exdata
</%args>
<% $exdata->{QUERY} %>
</%method>

<%method params>
<%args>
$exdata
</%args>
A hívás: <INPUT TYPE=text NAME=query SIZE=60 VALUE="<% $exdata->{QUERY} %>">
</%method>

<%method calcdata>
<%args>
$query
</%args>
<%init>;
my ($input, $output, %data, %vars) = ("/tmp/$sid.pl");
my $pl_timeout = $ENV{ETS_ROOT} . "/bin/timeout_pl.pl";

$data{QUERY} = $query;

open PL, ">$input";
print PL ":- $query.\n:- halt.\n";
close PL;
open Reader, "$pl_timeout $input |";
$output = join "", <Reader>;
close Reader;
unlink $input;

$output =~ s/^[^!].*\n//mg;
chomp $output;
if ($output) {
    return { %data, ERROR => "<PRE>$output</PRE>" };
} else {
    @vars{($query =~ /[_A-Z]\w*/g)} = (); # drop multiple occurences
    return { %data, VARS => [sort keys %vars] };
}
</%init>
</%method>
