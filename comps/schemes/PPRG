<%doc> This is a -*- mason -*- template.
Handler of the Prolog Programming (PPRG) scheme.
</%doc>
<%method longname>Prolog programozás</%method>

<%args> $exdata </%args>
Írj egy, az alábbi fejkommentnek megfelelő Prolog eljárást! Nem
használhatod a könyvtári eljárásokat, a mellékhatásos beépített eljárásokat,
valamint az alábbi listakezelő eljárásokat: <code>append/3</code>, <code>member/2</code>, <code>memberchk/2</code>, <code>nonmember/2</code>.
<P>

<PRE>
% $Text::Wrap::columns = 80;
<% wrap("% ", "%   ", $exdata->{COMMENT}) %>
</PRE>

<TABLE><TR><TH valign=top>Példa:<TD>
% foreach (split "\n", $exdata->{EXAMPLE}) {
<CODE><% $_ %></CODE><BR>
% }
</TABLE>

<%method answers>
<%args>
$exdata
$pred => ""
</%args>
<TEXTAREA NAME=pred ROWS=15 COLS=80><% $pred %></TEXTAREA>
</%method>

<%method check>
<%args>
$exdata
$pred
</%args>
<%init>
my ($tests, $prog, $ret, $msg) = ("/tmp/${sid}_t.pl", "/tmp/${sid}_p.pl");
open PL, ">$tests";
print PL $exdata->{TEST};
close PL;
open PL, ">$prog";
print PL $pred;
close PL;
($ret, $msg) = $m->comp('sub/prolog_script', script => "pprg_check",
			args => [ $prog, $tests ]);
unlink $tests;
unlink $prog;
return ($ret == 1) ? undef : $msg;
</%init>
</%method>

<%method errstr>
<%args>
$exdata
$error
</%args>
<% $error %>
</%method>

<%method describe>
<%args>
$exdata
</%args>
<% $exdata->{DESC} %>
</%method>

<%method params>
<%args>
$exdata
</%args>

<TABLE>
<TR><TD>Rövid leírás:
    <TD><INPUT TYPE=text NAME=desc SIZE=60 VALUE="<% $exdata->{DESC} %>">
<TR><TD>Példák (soronként egy):
    <TD><TEXTAREA NAME=example ROWS=3 COLS=60><% $exdata->{EXAMPLE} %></TEXTAREA>
<TR><TD>Fejkomment:
    <TD><TEXTAREA NAME=comment ROWS=3 COLS=60><% $exdata->{COMMENT} %></TEXTAREA>
<TR><TD>Tesztkifejezés:
    <TD><TEXTAREA NAME=test ROWS=5 COLS=60><% $exdata->{TEST} %></TEXTAREA>
</TABLE>
</%method>

<%method calcdata>
<%args>
$desc
$comment
$example
$test
</%args>
<%init>
return { DESC      => $desc,
	 COMMENT   => $comment,
	 EXAMPLE   => $example,
	 TEST      => $test };
</%init>
</%method>
